#+name: inline-js
#+begin_src elisp :exports none :results html :var blk=""
(concat
 "<script type=\"text/javascript\">\n"
 (cadr (org-babel-lob--src-info blk))
 "\n"
 "</script>")
#+end_src

#+name: compileOrgArticles
#+begin_src elisp :exports none :results output
(mapc 
  (lambda (f) (progn 
                (message "file %s" f)
                (find-file f)
                (org-twbs-export-to-html)
                (kill-buffer)
                ))
  (directory-files "./articles/" t "\.org$"))

#+end_src

#+name: populateArticles
#+begin_src elisp :exports none :results html :var page=1
(progn
  (setq almostJSVar (seq-reduce (lambda (acc file)(concat acc "\"" file "\""  ",")) (seq-take (seq-drop (directory-files "./articles/" t "\.html$") (* 5 (- page 1))) 5) "var htmlArticles = [")
        almostJSVarLeng (length almostJSVar)
        JSVar (concat (substring almostJSVar 0 (- almostJSVarLeng 1)) "];")
        )
  (concat
   "<script type=\"text/javascript\">\n"
   JSVar
   "\n"
   "</script>")
  )
#+end_src
