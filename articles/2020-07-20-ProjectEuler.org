#+OPTIONS: num:nil toc:nil H:4
#+OPTIONS: html-preamble:nil html-postamble:nil html-scripts:t html-style:nil
#+TITLE: Project Euler 1-10
#+DESCRIPTION: Project Euler 1-10
#+KEYWORDS: Project Euler 1-10
#+CREATOR: Enrico Benini
#+HTML_HEAD_EXTRA: <link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon">
#+HTML_HEAD_EXTRA: <link rel="icon" href="../images/favicon.ico" type="image/x-icon">
#+HTML_HEAD_EXTRA:  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css">
#+HTML_HEAD_EXTRA:  <link href="https://fonts.googleapis.com/css?family=Montserrat" rel="stylesheet" type="text/css">
#+HTML_HEAD_EXTRA:  <link href="https://fonts.googleapis.com/css?family=Lato" rel="stylesheet" type="text/css">
#+HTML_HEAD_EXTRA: <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"/>
#+HTML_HEAD_EXTRA: <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
#+HTML_HEAD_EXTRA:  <link rel="stylesheet" href="../css/main.css">
#+HTML_HEAD_EXTRA:  <link rel="stylesheet" href="../css/blog.css">
#+HTML_HEAD_EXTRA:  <link rel="stylesheet" href="../css/article.css">

* Blog
  :PROPERTIES:
  :HTML_CONTAINER: nav
:HTML_CONTAINER_CLASS: navbar bg-dark border-bottom border-body navbar-fixed-top navbar-expand-lg bg-body-tertiary
  :CUSTOM_ID: navbar
  :END:
#+CALL: ../templates.org:navbar(1)

* Project Euler 1-10
  :PROPERTIES:
  :CUSTOM_ID: Article
    :HTML_CONTAINER_CLASS: row
  :END:
  *Created: <2020-07-20 Mon>*
** Abstract
   :PROPERTIES:
   :CUSTOM_ID: ArticleAbstract
   :END:

   [[https://projecteuler.net/][Project Euler]] is a collection of math based problems you can try to
   solve using a programming language, for fun.

   #+html: <img class="w-100 my-2" src="https://i.pinimg.com/originals/e5/49/15/e54915681f932a51e33bb1dec210faba.jpg"></img>

   Therefore, I decided to start doing some of them, using Haskell as a
   language. That's quite similar to other site like [[https://www.hackerrank.com/][HackerRank]]. You
   might want to look at them if you are searching a way to train
   yourself on a specific language, plus learn some math in the
   process.

   *Edit:* <2021-08-28 Sat>
   Added Scala 3 solutions

** Content
   :PROPERTIES:
   :CUSTOM_ID: ArticleContent
   :END:

*** Multiple of 3 and 5
    :PROPERTIES:
    :CUSTOM_ID: ArticleContentEx1
    :END:

    Problem:  [[https://projecteuler.net/problem=1][Multiples of 3 and 5]]

    Solution Haskell:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerhaskell%2Fsrc%2FProjectEuler.hs%23L5-7&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

    Solution Scala:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerscala%2Fsrc%2Fmain%2Fscala%2FProjectEuler.scala%23L5-L8&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

*** Even Fibonacci Numbers
    :PROPERTIES:
    :CUSTOM_ID: ArticleContentEx2
    :END:

    Problem: [[https://projecteuler.net/problem=2][Even Fibonacci Numbers]]

    Solution Haskell:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerhaskell%2Fsrc%2FProjectEuler.hs%23L9-13&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

    Solution Scala:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerscala%2Fsrc%2Fmain%2Fscala%2FProjectEuler.scala%23L10-L16&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

*** Large Prime Factor
    :PROPERTIES:
    :CUSTOM_ID: ArticleContentEx3
    :END:

    Problem: [[https://projecteuler.net/problem=3][Largest Prime Factor]]

    Solution Haskell:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerhaskell%2Fsrc%2FProjectEuler.hs%23L15-30&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

    Solution Scala:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerscala%2Fsrc%2Fmain%2Fscala%2FProjectEuler.scala%23L18-L27&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

*** Largest Palindrome Product
    :PROPERTIES:
    :CUSTOM_ID: ArticleContentEx4
    :END:

    Problem: [[https://projecteuler.net/problem=4][Largest Palindrome Product]]

    Solution Haskell:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerhaskell%2Fsrc%2FProjectEuler.hs%23L32-37&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

    Solution Scala:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerscala%2Fsrc%2Fmain%2Fscala%2FProjectEuler.scala%23L29-L31&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

*** Smallest Multiple
    :PROPERTIES:
    :CUSTOM_ID: ArticleContentEx5
    :END:

    Problem: [[https://projecteuler.net/problem=5][Smallest Multiple]]

    Solution Haskell:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerhaskell%2Fsrc%2FProjectEuler.hs%23L39-41&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

    Solution Scala:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerscala%2Fsrc%2Fmain%2Fscala%2FProjectEuler.scala%23L33-L34&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

*** Sum Square Difference
    :PROPERTIES:
    :CUSTOM_ID: ArticleContentEx6
    :END:

    Problem: [[https://projecteuler.net/problem=6][Sum Square Difference]]

    Solution Haskell:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerhaskell%2Fsrc%2FProjectEuler.hs%23L43-49&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

    Solution Scala:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerscala%2Fsrc%2Fmain%2Fscala%2FProjectEuler.scala%23L36-L39&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

*** 10001st prime
    :PROPERTIES:
    :CUSTOM_ID: ArticleContentEx7
    :END:

    Problem: [[https://projecteuler.net/problem=7][10001st prime]]

    Solution Haskell:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerhaskell%2Fsrc%2FProjectEuler.hs%23L51-53&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

    Solution Scala:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerscala%2Fsrc%2Fmain%2Fscala%2FProjectEuler.scala%23L41-L46&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

*** Largest product in a series
    :PROPERTIES:
    :CUSTOM_ID: ArticleContentEx8
    :END:

    Problem: [[https://projecteuler.net/problem=8][Largest product in a series]]

    Solution Haskell:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerhaskell%2Fsrc%2FProjectEuler.hs%23L55-67&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

    Solution Scala:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerscala%2Fsrc%2Fmain%2Fscala%2FProjectEuler.scala%23L48-L51&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

*** Special Pythagorean triplet
    :PROPERTIES:
    :CUSTOM_ID: ArticleContentEx9
    :END:

    Problem: [[https://projecteuler.net/problem=9][Special Pythagorean triplet]]

    Solution Haskell:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerhaskell%2Fsrc%2FProjectEuler.hs%23L69-80&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

    Solution Scala:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerscala%2Fsrc%2Fmain%2Fscala%2FProjectEuler.scala%23L53-L62&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

*** Summation of Primes
    :PROPERTIES:
    :CUSTOM_ID: ArticleContentEx10
    :END:

    This one never terminates. I searched for a solution on the web,
    but they provide the simplistic solution. Plus, ~GHCI~ doesn't see
    multiple cores.

    Problem: [[https://projecteuler.net/problem=10][Summation of primes]]

    Solution Haskell:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerhaskell%2Fsrc%2FProjectEuler.hs%23L90-92&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

    Solution Scala:
    #+html: <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fbenkio%2FGeneralExercises%2Fblob%2Fmaster%2FProjectEuler%2Fprojecteulerscala%2Fsrc%2Fmain%2Fscala%2FProjectEuler.scala%23L64-L71&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on&showCopy=on"></script>

** Conclusions
   :PROPERTIES:
   :CUSTOM_ID: ArticleConclusions
   :END:

   Doing the exercises in ~Scala~ I encountered some problems using
   ~Long~ and ranges. So, some solutions are not ideal, but them
   works. Here the (frustration) [[https://twitter.com/benkio89/status/1431546742953152516][tweet]] as a reference
   learning never ends

* Share Buttons
  :PROPERTIES:
  :CUSTOM_ID: ShareButtons
    :HTML_CONTAINER_CLASS: row
  :END:
  #+BEGIN_EXPORT html
  <!-- AddToAny BEGIN -->
  <hr>
  <div class="a2a_kit a2a_kit_size_32 a2a_default_style">
  <a class="a2a_dd" href="https://www.addtoany.com/share"></a>
  <a class="a2a_button_facebook"></a>
  <a class="a2a_button_twitter"></a>
  <a class="a2a_button_whatsapp"></a>
  <a class="a2a_button_telegram"></a>
  <a class="a2a_button_linkedin"></a>
  <a class="a2a_button_email"></a>
  </div>
  <script async src="https://static.addtoany.com/menu/page.js"></script>
  <!-- AddToAny END -->
  #+END_EXPORT

  #+begin_export html
  <script type="text/javascript">
  $(function() {
    $('#text-table-of-contents > ul li').first().css("display", "none");
    $('#text-table-of-contents > ul li').last().css("display", "none");
    $('#table-of-contents').addClass("visible-lg")
  });
  document.getElementById("content").classList.add("container-fluid","p-0");
  document.getElementById("text-navbar").classList.add("container-fluid");
  document.getElementById("outline-container-navbar").setAttribute("data-bs-theme", "dark");
  document.getElementById("text-Article").classList.add("text-center");
  $('.outline-3').addClass("m-auto").addClass("col-10");
  document.getElementById("text-ShareButtons").classList.add("m-auto", "col-10");
  </script>
  #+end_export
#+INCLUDE: ../Fragments/disqusFragment.html export html
