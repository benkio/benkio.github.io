#+OPTIONS: num:nil toc:nil H:4
#+OPTIONS: html-preamble:nil html-postamble:nil html-scripts:t html-style:nil
#+TITLE: NixOs from I3 and X11 to Sway and Wayland
#+DESCRIPTION: NixOs from I3 and X11 to Sway and Wayland
#+KEYWORDS: NixOs from I3 and X11 to Sway and Wayland
#+CREATOR: Enrico Benini
#+HTML_HEAD_EXTRA: <link rel="shortcut icon" href="../images/favicon.ico" type="image/x-icon">
#+HTML_HEAD_EXTRA: <link rel="icon" href="../images/favicon.ico" type="image/x-icon">
#+HTML_HEAD_EXTRA:  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css">
#+HTML_HEAD_EXTRA:  <link href="https://fonts.googleapis.com/css?family=Montserrat" rel="stylesheet" type="text/css">
#+HTML_HEAD_EXTRA:  <link href="https://fonts.googleapis.com/css?family=Lato" rel="stylesheet" type="text/css">
#+HTML_HEAD_EXTRA:  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
#+HTML_HEAD_EXTRA: <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"/>
#+HTML_HEAD_EXTRA: <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
#+HTML_HEAD_EXTRA:  <link rel="stylesheet" href="../css/main.css">
#+HTML_HEAD_EXTRA:  <link rel="stylesheet" href="../css/blog.css">
#+HTML_HEAD_EXTRA:  <link rel="stylesheet" href="../css/article.css">

* Blog
  :PROPERTIES:
  :HTML_CONTAINER: nav
:HTML_CONTAINER_CLASS: navbar bg-dark border-bottom border-body navbar-fixed-top navbar-expand-lg bg-body-tertiary
  :CUSTOM_ID: navbar
  :END:
#+CALL: ../templates.org:navbar(1)

* NixOs from I3 and X11 to Sway and Wayland
  :PROPERTIES:
  :CUSTOM_ID: Article
    :HTML_CONTAINER_CLASS: row container-md py-4 m-auto
  :END:
  *Created: <2025-10-04 Sat>*
** Abstract
  :PROPERTIES:
  :CUSTOM_ID: ArticleAbstract
  :END:

  I think it's time to abandon the ship. Move away from ~I3~ and go to
  ~Wayland~. It should be save enough, but I need to do it in ~NixOs~
  and migrate to ~sway~. Quite some level of complexity already. Let's
  see if I can pull it off and how hard it is.

** Content
  :PROPERTIES:
  :CUSTOM_ID: ArticleContent
  :END:

  I branched my [[https://github.com/benkio/nix-config][nix-config repository]]
  I start from [[https://nixos.wiki/wiki/Wayland][the official NixOs page]] for Wayland.

*** Display Manager (GDM)

  First step is to install a Display Manager as I have none. I go for
  the suggested ~gdm~. Unfortunately the guide just point you to the
  source code of it as you should be able to figure it out by
  yourself, but I'm lazy and I don't care much about it, so I'll
  google for something precooked. It does seems easy from [[https://nixos.wiki/wiki/GNOME#Installation][here]].

  It says to activate ~GNOME~ as Desktop Manager, but I'm not
  interested. So I'll leave it out for now. I'm worried about the
  ~displayManager.defaultSession = 'none+i3'=~. That might cause
  problems, so I'm looking for alternatives. If nothing will sound OK,
  I'll try just an update and a reboot.

  On the docs I read [[https://github.com/NixOS/nixpkgs/blob/7df7ff7d8e00218376575f0acdcc5d66741351ee/nixos/modules/services/display-managers/default.nix#L140][this]], really promising. I try a build with an
  empty string as suggested to see if I got options.

  It seems ~"none+i3"~ is OK. Let's update and reboot

  Update and reboot done, nothing catastrophic happened, but no ~GDM~
  appeared. OK, no problem, let's continue.

*** Sway

  Let's tackle the elephant in the room, [[https://nixos.wiki/wiki/Sway][move to sway]].

  I have quite some configuration in ~i3~ to move, but I'll just go to
  the ~programs~ file for ~NixOs~ and start the tedious work of mix
  and match the config from one to another. Fortunately ~nix~ allow me
  to build or I would be screwed. Expect quite some commits.

  Let go Step by Step.
  First I try to comment out everything related to ~i3~ and enable
  ~sway~ as it is, without configurations. Then run through the config
  of ~i3~ and try to replicate, ðŸ¤ž I'll find all the 1-to-1
  correspondences.

  It builds fine, let's apply and reboot.

  it says: ~5.95 MiB download, 9.40 MiB unpacked~
  That's worrying.

  As expected I reebooted into gnome! At least it's not totally broken.
  I should have known as it asked for that as ~DefaultSession~.
  Let see how to apply sway. First thing first let's actually comment
  the ~xserver~.

  In compiles as nothing changed, but apparetly the trick is in
  enabling grome when I did not and set the default sessions with
  something with wayland. Keep trying âŒ›

  Finally the ~sway~ option appeared in the ~defaultSession~ and now I
  can update and reboot ðŸ¤ž Still it didn't download anything ðŸ¤·

*** The Mistake and Resolution

  It rebooted correctly, but, with default configs.
  This means:
  - No preferred keyboard layout (Dvorak programmer). Granny speed typing
  - Wrong resolution (display micro scaling)
  - No known keybinding

  It was extremely painful to do whatever in this situation and I had
  to figure out how to configure the sway.

  It took me a while to understand that I need ~home-manager~ to
  configure it properly. Fortunately, I've kept the ~i3.nix~ file,
  with all the its configurations around. So I just:
  - Rename it
  - Add it to home configuration
  - Loop over ~nix*~ compilation and try to get to a fully functional config.

  The good part is the fact that ~sway~ have a built in checker for
  correctness. Therefore, everything generated by ~home-manager~ was
  also checked against ~sway~. Another thing that helped me a lot was
  the similarity between home-manager's ~i3~ and ~sway~
  configs. Basically I just needed to adjust small things.

  It took me the whole Saturday Night, but eventually I was able to do
  it.

*** Little Adjustments

  The following morning, when I turned on the PC, I've found still
  something to tweak, such as the screen resolution, and I need to
  solve something like broken bar icons, but overall I'm really
  satisfied by the result.

** Conclusions
  :PROPERTIES:
  :CUSTOM_ID: ArticleConclusions
  :END:

  I was expecting this to be a bloodbath, with countless hours lost
  and frustration, but I must say that it was faster then expected: in
  an evening I pulled it off basically and now I'm ready to rock as
  before.

  Why that? Mainly due to the ~nix~ compiled nature and config
  consistency! I'm quite sure that, If I had to do it manually through
  bash, config files and so on I'll still be there now.

  Plus, I was confident that, if anything was going bad and I needed
  to rollback, I could just use a previous generation and discard the
  config changes. It's great to be able to be confident about your
  system configuration.

* Share Buttons
  :PROPERTIES:
  :CUSTOM_ID: ShareButtons
  :HTML_CONTAINER_CLASS: row
  :END:
#+BEGIN_EXPORT html
<!-- AddToAny BEGIN -->
<hr>
<div class="a2a_kit a2a_kit_size_32 a2a_default_style">
<a class="a2a_dd" href="https://www.addtoany.com/share"></a>
<a class="a2a_button_facebook"></a>
<a class="a2a_button_twitter"></a>
<a class="a2a_button_whatsapp"></a>
<a class="a2a_button_telegram"></a>
<a class="a2a_button_linkedin"></a>
<a class="a2a_button_email"></a>
</div>
<script async src="https://static.addtoany.com/menu/page.js"></script>
<!-- AddToAny END -->
#+END_EXPORT

#+begin_export html
<script type="text/javascript">
$(function() {
  $('#text-table-of-contents > ul li').first().css("display", "none");
  $('#text-table-of-contents > ul li').last().css("display", "none");
  $('#table-of-contents').addClass("visible-lg")
});
  document.getElementById("content").classList.add("container-fluid","p-0");
  document.getElementById("text-navbar").classList.add("container-fluid");
  document.getElementById("outline-container-navbar").setAttribute("data-bs-theme", "dark");
  document.getElementById("text-Article").classList.add("text-center");
  $('.outline-3').addClass("m-auto").addClass("col-10");
  document.getElementById("text-ShareButtons").classList.add("m-auto", "col-10");
</script>
#+end_export
